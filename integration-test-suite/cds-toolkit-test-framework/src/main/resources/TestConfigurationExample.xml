<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?><!--
 ~ Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 ~
 ~ This software is the property of WSO2 Inc. and its suppliers, if any.
 ~ Dissemination of any information or reproduction of any material contained
 ~ herein is strictly forbidden, unless permitted by WSO2 in accordance with
 ~ the WSO2 Software License available at https://wso2.com/licenses/eula/3.1.
 ~ For specific language governing the permissions and limitations under this
 ~ license, please see the license as well as any agreement you?ve entered into
 ~ with WSO2 governing the purchase of this software and any associated services.
-->
<Configurations>

    <!-- Common Configurations -->
    <Common>
        <!--Sample Values: 3.0.0 -->
        <SolutionVersion>Common.SolutionVersion</SolutionVersion>

        <!--Sample Values: 1.3.0 -->
        <ApiVersion>Common.ApiVersion</ApiVersion>

        <!--Access token expire time in seconds-->
        <!--Sample Values: 30 -->
        <AccessTokenExpireTime>Common.AccessTokenExpireTime</AccessTokenExpireTime>

        <!--Sample Values: carbon.super -->
        <TenantDomain>Common.TenantDomain</TenantDomain>

        <!--Sample Values: PS256 -->
        <SigningAlgorithm>Common.SigningAlgorithm</SigningAlgorithm>
    </Common>

    <!-- Provisioning Info -->
    <Provisioning>
        <!--Sample Value: true/false (Enable if you want to publish and subscribe API via test cases in
           common.integration.test package.)-->
        <Enabled>Provisioning.Enabled</Enabled>

        <!--Sample Value: <Path to financial-open-banking>/open-banking-test-suite/accelerator-tests/
        ob-gateway-integration-tests/common.integration.test/src/test/resources/provisioningFiles/
        api-config-provisioning.yaml-->
        <ProvisionFilePath>Provisioning.ProvisionFilePath</ProvisionFilePath>
    </Provisioning>

    <!-- Server Info -->
    <Server>
        <!--Sample Values: https://<AM_HOST>:8243 -->
        <BaseURL>Server.BaseURL</BaseURL>

        <!--Sample Values: https://<AM_HOST>:9443 -->
        <GatewayURL>Server.GatewayURL</GatewayURL>

        <!--Sample Values: https://<IS_HOST>:9446 -->
        <AuthorisationServerURL>Server.AuthorisationServerURL</AuthorisationServerURL>
    </Server>

    <!-- Application List -->
    <ApplicationConfigList>
        <!-- Application 1 Details -->
        <AppConfig>
            <!-- Application Keystore -->
            <KeyStore>
                <!--Absolute path + file name of JKS keystore file-->
                <!--Sample Values:  {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/DynamicClientRegistration/
                AU/sample-client-resources/signing-keystore/signing.jks -->
                <Location>AppConfig1.KeyStore.Location</Location>

                <!--Sample Values: tpp6-signing -->
                <Alias>AppConfig1.KeyStore.Alias</Alias>

                <!--Sample Values: wso2carbon -->
                <Password>AppConfig1.KeyStore.Password</Password>

                <!--Sample Values: https://wso2.com -->
                <DomainName>AppConfig1.KeyStore.DomainName</DomainName>

                <!--Sample Values: h3ZCF0VrzgXgnHCqbHbKXzzfjTg -->
                <SigningKid>AppConfig1.KeyStore.SigningKid</SigningKid>
            </KeyStore>

            <!-- Transport Keystore and Truststore -->
            <!--This Keystore and the Truststore will be used during the SSL handshake-->
            <Transport>
                <!--Sample Values: true -->
                <MTLSEnabled>AppConfig1.Transport.MTLSEnabled</MTLSEnabled>
                <!--A keystore and a truststore needs to be configured in the following section if MTLSEnabled is set to
                true-->

                <KeyStore>
                    <!--Absolute path + file name of keystore file.-->
                    <!--Sample Values:  {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/DynamicClientRegistration/
                    AU/sample-client-resources/transport-keystore/transport.jks-->
                    <Location>AppConfig1.Transport.KeyStore.Location</Location>

                    <!--Sample Values: jks -->
                    <Type>AppConfig1.Transport.KeyStore.Type</Type>

                    <!--Sample Values: wso2carbon -->
                    <Password>AppConfig1.Transport.KeyStore.Password</Password>
                </KeyStore>
            </Transport>

            <!-- DCR Configurations -->
            <DCR>
                <!--Sample Values:  {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/DynamicClientRegistration/
                AU/sample-client-resources/ssa.txt -->
                <SSAPath>AppConfig1.DCR.SSAPath</SSAPath>

                <!-- Software Product ID -->
                <!--Sample Values: oQ4KoaavpOuoE7rvQsZEOV -->
                <SoftwareId>DCR.SoftwareId</SoftwareId>

                <!-- SSA Redirect Uri -->
                <!--Sample Values: https://www.google.com/redirects/redirect1 -->
                <RedirectUri>AppConfig1.DCR.RedirectUri</RedirectUri>

                <!--Sample Values: https://www.google.com/redirects/redirect2 -->
                <AlternateRedirectUri>AppConfig1.DCR.AlternateRedirectUri</AlternateRedirectUri>
            </DCR>

            <!-- Application Info -->
            <Application>
                <ClientID>AppConfig1.Application.ClientID</ClientID>

                <ClientSecret>AppConfig1.Application.ClientSecret</ClientSecret>

                <!--Sample Values: https://www.google.com/redirects/redirect1 -->
                <RedirectURL>AppConfig1.Application.RedirectURL</RedirectURL>
            </Application>
        </AppConfig>

        <!-- Application 2 Details -->
        <AppConfig>
            <!-- Application Keystore -->
            <KeyStore>
                <!--Absolute path + file name of keystore file.-->
                <!-- {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/DynamicClientRegistration/
                AU/sample-client-resources2/signing-keystore/signing.jks-->
                <Location>AppConfig2.KeyStore.Location</Location>

                <!--Sample Values: tpp6-signing -->
                <Alias>AppConfig2.KeyStore.Alias</Alias>

                <!--Sample Value: wso2carbon -->
                <Password>AppConfig2.KeyStore.Password</Password>

                <!--Sample Values: https://wso2.com -->
                <DomainName>AppConfig2.KeyStore.DomainName</DomainName>

                <!--Sample Values: w7NFeMODzCMOZen_WECAlG9N8gg -->
                <SigningKid>AppConfig2.KeyStore.SigningKid</SigningKid>
            </KeyStore>

            <!-- Transport Keystore and Truststore -->
            <!--This Keystore and the Truststore will be used during the SSL handshake-->
            <Transport>
                <!--Sample Value: true -->
                <MTLSEnabled>AppConfig2.Transport.MTLSEnabled</MTLSEnabled>
                <!--A keystore and a truststore needs to be configured in the following section if MTLSEnabled is set to
                true-->
                <KeyStore>
                    <!--Absolute path + file name of keystore file.-->
                    <!--Sample Value: {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/
                    DynamicClientRegistration/AU/sample-client-resources2/transport-keystore/transport.jks
                    <Location>AppConfig2.Transport.KeyStore.Location</Location> -->

                    <!--Sample Values: jks -->
                    <Type>AppConfig2.Transport.KeyStore.Type</Type>

                    <!--Sample Value: wso2carbon -->
                    <Password>AppConfig2.Transport.KeyStore.Password</Password>
                </KeyStore>
            </Transport>

            <!-- DCR Configurations -->
            <DCR>
                <!--Sample Values: {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/DynamicClientRegistration/
                AU/sample-client-resources2/ssa.txt -->
                <SSAPath>AppConfig2.DCR.SSAPath</SSAPath>

                <!-- Software Product ID -->
                <!--Sample Values: 8PwKpjuPDgU76j3QxJzfOtE9CWw -->
                <SoftwareId>DCR.SoftwareId</SoftwareId>

                <!-- SSA Redirect Uri -->
                <!--Sample Values: https://www.google.com/redirects/redirect1 -->
                <RedirectUri>AppConfig1.DCR.RedirectUri</RedirectUri>

                <!--Sample Values: https://www.google.com/redirects/redirect2 -->
                <AlternateRedirectUri>AppConfig1.DCR.AlternateRedirectUri</AlternateRedirectUri>

                <!--Sample Value: http://<SHARAEBALE_ACCOUNT_ENDPOINT>:9763 -->
                <SharableAccountsURL>Server.SharableAccountsURL</SharableAccountsURL>
            </DCR>

            <!-- Application Info -->
            <Application>
                <ClientID>AppConfig2.Application.ClientID</ClientID>
                <ClientSecret>AppConfig2.Application.ClientSecret</ClientSecret>

                <!--Sample Value: https://www.google.com/redirects/redirect1 -->
                <RedirectURL>AppConfig2.Application.RedirectURL</RedirectURL>
            </Application>
        </AppConfig>

    </ApplicationConfigList>

    <Transport>
        <Truststore>
            <!--Absolute path + file name of truststore file. We can point the product client-truststore.jks here.-->
            <!--Sample Values: /wso2am-4.0.0/repository/resources/security/client-truststore.jk-->
            <Location>Transport.Truststore.Location</Location>

            <!--Sample Values: jks -->
            <Type>Transport.Truststore.Type</Type>

            <!--Sample Values: wso2carbon -->
            <Password>Transport.Truststore.Password</Password>
        </Truststore>
    </Transport>

    <!-- Non-Regulatory Application Info -->
    <NonRegulatoryApplication>
        <ClientID>NonRegulatoryApplication.ClientID</ClientID>
        <ClientSecret>NonRegulatoryApplication.ClientSecret</ClientSecret>
        <RedirectURL>NonRegulatoryApplication.RedirectURL</RedirectURL>
    </NonRegulatoryApplication>

    <!-- PSU Info -->
    <PSUInfo>
        <!--Sample Values: admin@wso2.com -->
        <User>PSUInfo.User</User>

        <!--Sample Values: wso2123 -->
        <Password>PSUInfo.Password</Password>
    </PSUInfo>

    <!-- Publisher Info -->
    <PublisherInfo>
        <!--Sample Values: admin@wso2.com -->
        <User>PublisherInfo.User</User>

        <!--Sample Values: wso2123 -->
        <Password>PublisherInfo.Password</Password>
    </PublisherInfo>
    <!-- PSU Info -->

    <TPPInfo>
        <!--Sample Values: admin@wso2.com -->
        <User>TPPInfo.user_name</User>

        <!--Sample Values: wso2123 -->
        <Password>TPPInfo.Password</Password>
    </TPPInfo>

    <!-- Customer Care Info -->
    <CustomerCareInfo>
        <!--Sample Values: ann@gold.com -->
        <User>CustomerCareInfo.User</User>

        <!--Sample Values: wso2123 -->
        <Password>CustomerCareInfo.Password</Password>
    </CustomerCareInfo>

    <!-- Basic Auth Info -->
    <BasicAuthInfo>
        <!--Sample Values: admin@wso2.com -->
        <User>BasicAuthInfo.User</User>

        <!--Sample Values: wso2123 -->
        <Password>BasicAuthInfo.Password</Password>
    </BasicAuthInfo>

    <KeyManagerAdmin>
        <!--Sample Values: admin@wso2.com -->
        <User>KeyManagerAdmin.User</User>

        <!--Sample Values: wso2123 -->
        <Password>KeyManagerAdmin.Password</Password>
    </KeyManagerAdmin>

    <!-- Browser Automation -->
    <BrowserAutomation>
        <!--Sample Values: chrome/firefox-->
        <BrowserPreference>BrowserAutomation.BrowserPreference</BrowserPreference>
        <!--Sample Values: true/false -->
        <HeadlessEnabled>BrowserAutomation.HeadlessEnabled</HeadlessEnabled>
        <!--Sample Values: {Path to ob-compliance-toolkit-cds}/integration-test-suite/test-artifacts/selenium-libs/ubuntu/geckodriver -->
        <WebDriverLocation>BrowserAutomation.WebDriverLocation</WebDriverLocation>
    </BrowserAutomation>

    <ConsentApi>
        <!--Sample Values: https://<IS_HOST>:9446/oauth2/token -->
        <AudienceValue>ConsentApi.AudienceValue</AudienceValue>

        <!--Sample Values: https://<IS_HOST>:9446/oauth2/revoke -->
        <RevocationAudienceValue>ConsentApi.RevocationAudienceValue</RevocationAudienceValue>
    </ConsentApi>

    <InternalApiContext>
        <!--Sample Values: /api/openbanking/consent-mgt -->
        <Consent-Mgt>InternalApiContext.Consent-Mgt</Consent-Mgt>

    </InternalApiContext>

    <!--Micro Gateway Specific Server Urls.
    In MG the ports should be the corresponding port of the docker image.-->
    <MicroGateway>
        <MicroGatewayEnabled>MicroGateway.MicroGatewayEnabled</MicroGatewayEnabled>

        <!--Configure the Urls only for Micro Gateway Testing-->
        <!--Sample Value: https://<AM_HOST>:<port> for all the URLs below. port: Port of the docker container -->
        <DcrURL>Server.MicroGateway.AU.DcrURL</DcrURL>
        <CdsAuAccountsURL>Server.MicroGateway.AU.CdsAuAccountsURL</CdsAuAccountsURL>
        <CdsAuBalancesURL>Server.MicroGateway.AU.CdsAuBalancesURL</CdsAuBalancesURL>
        <CdsAuTransactionURL>Server.MicroGateway.AU.CdsAuTransactionURL</CdsAuTransactionURL>
        <CdsAuDirectDebitURL>Server.MicroGateway.AU.CdsAuDirectDebitURL</CdsAuDirectDebitURL>
        <CdsAuSchedulePaymentURL>Server.MicroGateway.AU.CdsAuSchedulePaymentURL</CdsAuSchedulePaymentURL>
        <CdsAuPayeeURL>Server.MicroGateway.AU.CdsAuPayeeURL</CdsAuPayeeURL>
        <CdsAuProductURL>Server.MicroGateway.AU.CdsAuProductURL</CdsAuProductURL>
        <CdsCustomerURL>Server.MicroGateway.AU.CdsCustomerURL</CdsCustomerURL>
        <CdsDiscoveryURL>Server.MicroGateway.AU.CdsDiscoveryURL</CdsDiscoveryURL>
        <CdrArrangementURL>Server.MicroGateway.AU.CdrArrangementURL</CdrArrangementURL>
        <CdsAdminURL>Server.MicroGateway.AU.CdsAdminURL</CdsAdminURL>
    </MicroGateway>

    <!-- Applies only for AU -->
    <!-- Refer MockCDRRegister/README.md for instructions to proceed with Mock CDR Register Integration -->
    <AUMockCDRRegister>

        <!--Sample Value: false/true -->
        <Enabled>AUMockCDRRegister.Enabled</Enabled>

        <!-- Host running the Mock Register docker image.-->
        <!--Sample Value: localhost -->
        <HostName>AUMockCDRRegister.HostName</HostName>

        <!--Sample Value: <Path to MockCDRRegisterMetaData.json -->
        <MetaDataFileLocation>AUMockCDRRegister.MetaDataFileLocation</MetaDataFileLocation>

        <Transport>
            <KeyStore>
                <!--Absolute file path to 'client.pfx' file-->
                <Location>AUMockCDRRegister.Transport.KeyStore.Location</Location>

                <!--Sample Value: pkcs12-->
                <Type>AUMockCDRRegister.Transport.KeyStore.Type</Type>

                <!--Sample Value: #M0ckCDRCA#-->
                <Password>AUMockCDRRegister.Transport.KeyStore.Password</Password>
            </KeyStore>
            <Truststore>
                <!--Absolute file path to 'ca.pfx' file-->
                <Location>AUMockCDRRegister.Transport.Truststore.Location</Location>

                <!--Sample Value: pkcs12-->
                <Type>AUMockCDRRegister.Transport.Truststore.Location</Type>

                <!--Sample Value: #M0ckCDRCA#-->
                <Password>AUMockCDRRegister.Transport.Truststore.Location</Password>
            </Truststore>
        </Transport>

        <Application>
            <KeyStore>
                <!--Absolute file path to 'signingkeystore.jks' file-->
                <Location>AUMockCDRRegister.Application.Location</Location>

                <!--Sample value: tpp6-signing-->
                <Alias>AUMockCDRRegister.Application.Alias</Alias>

                <!--Sample value: wso2carbon-->
                <Password>AUMockCDRRegister.Application.Password</Password>
            </KeyStore>
        </Application>

    </AUMockCDRRegister>

    <!--Rest API Info-->
    <RESTApi>
        <DCRAccessToken>RESTApi.DCRAccessToken</DCRAccessToken>
        <ApiId>RESTApi.ApiId</ApiId>
    </RESTApi>

    <!--ID performance Info-->
    <IdPermanence>
        <!--Sample Values: wso2 -->
        <SecretKey>IdPermanence.SecretKey</SecretKey>
    </IdPermanence>

</Configurations>

