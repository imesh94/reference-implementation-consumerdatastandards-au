<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?><!--
 ~ Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 ~
 ~ This software is the property of WSO2 Inc. and its suppliers, if any.
 ~ Dissemination of any information or reproduction of any material contained
 ~ herein is strictly forbidden, unless permitted by WSO2 in accordance with
 ~ the WSO2 Software License available at https://wso2.com/licenses/eula/3.1.
 ~ For specific language governing the permissions and limitations under this
 ~ license, please see the license as well as any agreement you?ve entered into
 ~ with WSO2 governing the purchase of this software and any associated services.
-->
<Configurations>

    <!-- Common Configurations -->
    <Common>
        <SolutionVersion>Common.SolutionVersion</SolutionVersion>
        <ApiVersion>Common.ApiVersion</ApiVersion>
        <!--Access token expire time in seconds-->
        <AccessTokenExpireTime>Common.ApiVersion</AccessTokenExpireTime>
        <TenantDomain>Common.TenantDomain</TenantDomain>
        <SigningAlgorithm>Common.SigningAlgorithm</SigningAlgorithm>
    </Common>

    <!-- Provisioning Info -->
    <Provisioning>
        <Enabled>Provisioning.Enabled</Enabled>
        <ProvisionFilePath>Provisioning.ProvisionFilePath</ProvisionFilePath>
    </Provisioning>

    <!-- Server Info -->
    <Server>
        <BaseURL>Server.BaseURL</BaseURL>
        <GatewayURL>Server.GatewayURL</GatewayURL>
        <AuthorisationServerURL>Server.AuthorisationServerURL</AuthorisationServerURL>
    </Server>

    <!-- Application List -->
    <ApplicationConfigList>
        <!-- Application 1 Details -->
        <AppConfig>
            <!-- Application Keystore -->
            <KeyStore>
                <!--Absolute path + file name of JKS keystore file-->
                <Location>AppConfig1.KeyStore.Location</Location>
                <Alias>AppConfig1.KeyStore.Alias</Alias>
                <Password>AppConfig1.KeyStore.Password</Password>
                <DomainName>AppConfig1.KeyStore.DomainName</DomainName>
                <SigningKid>AppConfig1.KeyStore.SigningKid</SigningKid>
            </KeyStore>

            <!-- Transport Keystore and Truststore -->
            <!--This Keystore and the Truststore will be used during the SSL handshake-->
            <Transport>
                <MTLSEnabled>AppConfig1.Transport.MTLSEnabled</MTLSEnabled>
                <!--A keystore and a truststore needs to be configured in the following section if MTLSEnabled is set to
                true-->
                <KeyStore>
                    <!--Absolute path + file name of keystore file.
                    (e.g. <location>/home/kasun/Downloads/Certs/keystore.jks</location>)-->
                    <Location>AppConfig1.Transport.KeyStore.Location</Location>
                    <Type>AppConfig1.Transport.KeyStore.Type</Type>
                    <Password>AppConfig1.Transport.KeyStore.Password</Password>
                </KeyStore>
            </Transport>

            <!-- DCR Configurations -->
            <DCR>
                <SSAPath>AppConfig1.DCR.SSAPath</SSAPath>
                <!-- SSA Redirect Uri -->
                <RedirectUri>AppConfig1.DCR.SSAPath</RedirectUri>
                <AlternateRedirectUri>AppConfig1.DCR.SSAPath</AlternateRedirectUri>
            </DCR>

            <!-- Application Info -->
            <Application>
                <ClientID>AppConfig1.Application.ClientID</ClientID>
                <ClientSecret>AppConfig1.Application.ClientSecret</ClientSecret>
                <RedirectURL>AppConfig1.Application.RedirectURL</RedirectURL>
            </Application>
        </AppConfig>

        <!-- Application 2 Details -->
        <AppConfig>
            <!-- Application Keystore -->
            <KeyStore>
                <!--Absolute path + file name of JKS keystore file-->
                <Location>AppConfig2.KeyStore.Location</Location>
                <Alias>AppConfig2.KeyStore.Alias</Alias>
                <Password>AppConfig2.KeyStore.Password</Password>
                <DomainName>AppConfig2.KeyStore.DomainName</DomainName>
                <SigningKid>AppConfig2.KeyStore.SigningKid</SigningKid>
            </KeyStore>

            <!-- Transport Keystore and Truststore -->
            <!--This Keystore and the Truststore will be used during the SSL handshake-->
            <Transport>
                <MTLSEnabled>AppConfig2.Transport.MTLSEnabled</MTLSEnabled>
                <!--A keystore and a truststore needs to be configured in the following section if MTLSEnabled is set to
                true-->
                <KeyStore>
                    <!--Absolute path + file name of keystore file.
                    (e.g. <location>/home/kasun/Downloads/Certs/keystore.jks</location>)-->
                    <Location>AppConfig2.Transport.KeyStore.Location</Location>
                    <Type>AppConfig2.Transport.KeyStore.Type</Type>
                    <Password>AppConfig2.Transport.KeyStore.Password</Password>
                </KeyStore>
            </Transport>

            <!-- DCR Configurations -->
            <DCR>
                <SSAPath>AppConfig2.DCR.SSAPath</SSAPath>
                <!-- SSA Redirect Uri -->
                <RedirectUri>AppConfig2.DCR.SSAPath</RedirectUri>
                <AlternateRedirectUri>AppConfig2.DCR.SSAPath</AlternateRedirectUri>
            </DCR>

            <!-- Application Info -->
            <Application>
                <ClientID>AppConfig2.Application.ClientID</ClientID>
                <ClientSecret>AppConfig2.Application.ClientSecret</ClientSecret>
                <RedirectURL>AppConfig2.Application.RedirectURL</RedirectURL>
            </Application>
        </AppConfig>

    </ApplicationConfigList>

    <Transport>
        <Truststore>
            <!--Absolute path + file name of truststore file. We can point the product client-truststore.jks here.
            (Eg: location/home/kasun/wso2-obam-1.3.0/repository/resources/security/client-truststore.jks</location>)-->
            <Location>Transport.Truststore.Location</Location>
            <Type>Transport.Truststore.Type</Type>
            <Password>Transport.Truststore.Password</Password>
        </Truststore>
    </Transport>

    <!-- Non-Regulatory Application Info -->
    <NonRegulatoryApplication>
        <ClientID>NonRegulatoryApplication.ClientID</ClientID>
        <ClientSecret>NonRegulatoryApplication.ClientSecret</ClientSecret>
        <RedirectURL>NonRegulatoryApplication.RedirectURL</RedirectURL>
    </NonRegulatoryApplication>

    <!-- PSU Info -->
    <PSUInfo>
        <User>PSUInfo.User</User>
        <Password>PSUInfo.Password</Password>
    </PSUInfo>

    <!-- Publisher Info -->
    <PublisherInfo>
        <User>PublisherInfo.User</User>
        <Password>PublisherInfo.Password</Password>
    </PublisherInfo>
    <!-- PSU Info -->

    <TPPInfo>
        <User>TPPInfo.user_name</User>
        <Password>TPPInfo.Password</Password>
    </TPPInfo>

    <!-- Customer Care Info -->
    <CustomerCareInfo>
        <User>CustomerCareInfo.User</User>
        <Password>CustomerCareInfo.Password</Password>
    </CustomerCareInfo>

    <!-- Basic Auth Info -->
    <BasicAuthInfo>
        <User>BasicAuthInfo.User</User>
        <Password>BasicAuthInfo.Password</Password>
    </BasicAuthInfo>

    <KeyManagerAdmin>
        <User>KeyManagerAdmin.User</User>
        <Password>KeyManagerAdmin.Password</Password>
    </KeyManagerAdmin>

    <!-- Browser Automation -->
    <BrowserAutomation>
        <!--Eg: chrome/firefox-->
        <BrowserPreference>BrowserAutomation.BrowserPreference</BrowserPreference>
        <HeadlessEnabled>BrowserAutomation.HeadlessEnabled</HeadlessEnabled>
        <WebDriverLocation>BrowserAutomation.WebDriverLocation</WebDriverLocation>
    </BrowserAutomation>

    <ConsentApi>
        <AudienceValue>ConsentApi.AudienceValue</AudienceValue>
        <RevocationAudienceValue>ConsentApi.RevocationAudienceValue</RevocationAudienceValue>
    </ConsentApi>

    <InternalApiContext>
        <Consent-Mgt>InternalApiContext.Consent-Mgt</Consent-Mgt>
        <!-- if 2.0.0 /api/openbanking/consent-mgt -->
    </InternalApiContext>

    <!--Micro Gateway Specific Server Urls.
    In MG the ports should be the corresponding port of the docker image.-->
    <MicroGateway>
        <MicroGatewayEnabled>MicroGateway.MicroGatewayEnabled</MicroGatewayEnabled>
        <!--Configure the Urls only for Micro Gateway Testing-->
        <DcrURL>Server.MicroGateway.AU.DcrURL</DcrURL>
        <CdsAuAccountsURL>Server.MicroGateway.AU.CdsAuAccountsURL</CdsAuAccountsURL>
        <CdsAuBalancesURL>Server.MicroGateway.AU.CdsAuBalancesURL</CdsAuBalancesURL>
        <CdsAuTransactionURL>Server.MicroGateway.AU.CdsAuTransactionURL</CdsAuTransactionURL>
        <CdsAuDirectDebitURL>Server.MicroGateway.AU.CdsAuDirectDebitURL</CdsAuDirectDebitURL>
        <CdsAuSchedulePaymentURL>Server.MicroGateway.AU.CdsAuSchedulePaymentURL</CdsAuSchedulePaymentURL>
        <CdsAuPayeeURL>Server.MicroGateway.AU.CdsAuPayeeURL</CdsAuPayeeURL>
        <CdsAuProductURL>Server.MicroGateway.AU.CdsAuProductURL</CdsAuProductURL>
        <CdsCustomerURL>Server.MicroGateway.AU.CdsCustomerURL</CdsCustomerURL>
        <CdsDiscoveryURL>Server.MicroGateway.AU.CdsDiscoveryURL</CdsDiscoveryURL>
        <CdrArrangementURL>Server.MicroGateway.AU.CdrArrangementURL</CdrArrangementURL>
        <CdsAdminURL>Server.MicroGateway.AU.CdsAdminURL</CdsAdminURL>
    </MicroGateway>

    <!-- Applies only for AU -->
    <!-- Refer MockCDRRegister/README.md for instructions to proceed with Mock CDR Register Integration -->
    <AUMockCDRRegister>

        <Enabled>AUMockCDRRegister.Enabled</Enabled>
        <!-- Host running the Mock Register docker image. Eg: localhost-->
        <HostName>AUMockCDRRegister.HostName</HostName>
        <MetaDataFileLocation>AUMockCDRRegister.MetaDataFileLocation</MetaDataFileLocation>

        <Transport>
            <KeyStore>
                <!--Absolute file path to 'client.pfx' file-->
                <Location>AUMockCDRRegister.Transport.KeyStore.Location</Location>
                <Type>AUMockCDRRegister.Transport.KeyStore.Type</Type>
                <Password>AUMockCDRRegister.Transport.KeyStore.Password</Password>
            </KeyStore>
            <Truststore>
                <!--Absolute file path to 'ca.pfx' file-->
                <Location>AUMockCDRRegister.Transport.Truststore.Location</Location>
                <Type>AUMockCDRRegister.Transport.Truststore.Location</Type>
                <!--Eg: #M0ckCDRCA#-->
                <Password>AUMockCDRRegister.Transport.Truststore.Location</Password>
            </Truststore>
        </Transport>

        <Application>
            <KeyStore>
                <!--Absolute file path to 'signingkeystore.jks' file-->
                <Location>AUMockCDRRegister.Application.Location</Location>
                <Alias>AUMockCDRRegister.Application.Alias</Alias>
                <Password>AUMockCDRRegister.Application.Password</Password>
            </KeyStore>
        </Application>

    </AUMockCDRRegister>

    <!--Rest API Info-->
    <RESTApi>
        <DCRAccessToken>RESTApi.DCRAccessToken</DCRAccessToken>
        <ApiId>RESTApi.ApiId</ApiId>
    </RESTApi>

    <!--ID performance Info-->
    <IdPermanence>
        <SecretKey>IdPermanence.SecretKey</SecretKey>
    </IdPermanence>

</Configurations>

