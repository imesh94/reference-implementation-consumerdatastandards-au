/*
 * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.
 *
 * This software is the property of WSO2 LLC. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.
 * You may not alter or remove any copyright or other notice from copies of this content.
 */

@App:name('CDSAvailabilityMetricsAggregationApp')
@App:description('Aggregate Availability to be used by CDS Metrics API')

-- Input to retrieve aggregated availability data from database
@Source(type = 'http-request',
        source.id='AvailabilityMetricsAggregationRetrieveStream',
        receiver.url='http://<ANALYTICS_HOSTNAME>:8007/CDSAvailabilityMetricsAggregationApp/AvailabilityMetricsAggregationRetrieveStream',
        basic.auth.enabled='true',
        @map(type = 'json',@attributes(MESSAGE_ID='trp:messageId', AGGREGATED_DATE='$.event.date')))
define stream AvailabilityMetricsAggregationRetrieveStream(MESSAGE_ID string, AGGREGATED_DATE string);

-- Output to retrieve aggregated availability data from database
@sink(type='http-response', source.id='AvailabilityMetricsAggregationRetrieveStream', message.id='{{MESSAGE_ID}}', @map(type='json'))
define stream AvailabilityMetricsAggregationRetrieveOutputStream(MESSAGE_ID string, AGGREGATED_DATE string, TIMESTAMP long, AGG_MONTH int, AVAILABILITY_AGG_DATA String);

-- Input to store aggregated availability data to database
@source(type='wso2event',  @map(type='wso2event'))
define stream AvailabilityMetricsAggregationInputStream(AGGREGATED_DATE string, AGG_MONTH int, AVAILABILITY_AGG_DATA String);

-- Table with aggregated availability data
@primaryKey('AGGREGATED_DATE', 'TIMESTAMP')
@store(type='rdbms', datasource='OB_REPORTING_DB')
define table AGGREGATED_CDS_AVAILABILITY_DATA(AGGREGATED_DATE string, TIMESTAMP long, AGG_MONTH int, AVAILABILITY_AGG_DATA String);

-- -- store aggregated availability data to database
from AvailabilityMetricsAggregationInputStream
select AGGREGATED_DATE, time:timestampInMilliseconds() as TIMESTAMP, AGG_MONTH, AVAILABILITY_AGG_DATA
insert into AGGREGATED_CDS_AVAILABILITY_DATA;

-- -- retrieve aggregated availability data to database
from AvailabilityMetricsAggregationRetrieveStream as a LEFT OUTER JOIN AGGREGATED_CDS_AVAILABILITY_DATA as d
        on a.AGGREGATED_DATE == d.AGGREGATED_DATE
select a.MESSAGE_ID, a.AGGREGATED_DATE, d.TIMESTAMP, d.AGG_MONTH, d.AVAILABILITY_AGG_DATA
insert into AvailabilityDataStream;

from AvailabilityDataStream[TIMESTAMP is NULL]
select MESSAGE_ID, AGGREGATED_DATE, time:timestampInMilliseconds() as TIMESTAMP, 0 as AGG_MONTH, "0" as AVAILABILITY_AGG_DATA
insert into AvailabilityMetricsAggregationRetrieveOutputStream;

from AvailabilityDataStream[NOT(TIMESTAMP is NULL)]
select *
insert into AvailabilityMetricsAggregationRetrieveOutputStream;
