/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 *
 * This software is the property of WSO2 Inc. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein is strictly forbidden, unless permitted by WSO2 in accordance with
 * the WSO2 Commercial License available at http://wso2.com/licenses.
 * For specific language governing the permissions and limitations under this
 * license, please see the license as well as any agreement youâ€™ve entered into
 * with WSO2 governing the purchase of this software and any associated services.
 */

@App:name("APIRawDataSubmissionApp")

@source(type='wso2event',  @map(type='wso2event'))
define stream APIInputStream(MESSAGE_ID string, CONSENT_ID string, CONSUMER_ID string, CLIENT_ID string,
                        USER_AGENT string, STATUS_CODE int, HTTP_METHOD string, RESPONSE_PAYLOAD_SIZE long,
                        ELECTED_RESOURCE string, API_NAME string, API_SPEC_VERSION string, TIMESTAMP long,
                        CUSTOMER_STATUS string, ACCESS_TOKEN_ID string);

@sink(type='inMemory',topic='apiInvocationRawData', @map(type='passThrough'))
define stream CDSMetricsRawStream(id string, statusCode int, respTime long, electedResource string, timestamp long,
                        customerStatus string);

@primaryKey('ID','ELECTED_RESOURCE')
@store(type='rdbms', datasource='OB_REPORTING_DB')
define table API_INVOCATION_RAW_DATA(ID string, MESSAGE_ID string, CONSENT_ID string, CONSUMER_ID string,
                        CLIENT_ID string, USER_AGENT string, STATUS_CODE int, HTTP_METHOD string,
                        RESPONSE_PAYLOAD_SIZE long, ELECTED_RESOURCE string, API_NAME string, API_SPEC_VERSION string,
                        TIMESTAMP long, CUSTOMER_STATUS string, ACCESS_TOKEN_ID string, SESSION_TYPE string);

@primaryKey('ID','MESSAGE_ID')
@store(type='rdbms', datasource='OB_REPORTING_DB')
define table API_LATENCY_RAW_DATA(ID string, MESSAGE_ID string, REQUEST_TIMESTAMP string, BACKEND_LATENCY long,
                        REQUEST_MEDIATION_LATENCY long, RESPONSE_LATENCY long, RESPONSE_MEDIATION_LATENCY long);

--Persist API Invocation Data
from APIInputStream
select UUID() as ID, MESSAGE_ID, CONSENT_ID, CONSUMER_ID, CLIENT_ID, USER_AGENT, STATUS_CODE, HTTP_METHOD,
                        RESPONSE_PAYLOAD_SIZE, ELECTED_RESOURCE, API_NAME, API_SPEC_VERSION, TIMESTAMP, CUSTOMER_STATUS,
                        ACCESS_TOKEN_ID, ifThenElse(CUSTOMER_STATUS == 'customer-present', 'attended', 'unattended') as
                        SESSION_TYPE
insert into API_INVOCATION_RAW_DATA;

--Update session type of token
--Once a token used in customer present context, it will always be considered as a session used for attended traffic.
from APIInputStream[CUSTOMER_STATUS == 'customer-present']
update API_INVOCATION_RAW_DATA
set API_INVOCATION_RAW_DATA.SESSION_TYPE = 'attended'
on API_INVOCATION_RAW_DATA.ACCESS_TOKEN_ID == ACCESS_TOKEN_ID;

--Generate CDS Metrics Raw stream
from APIInputStream as apiInputStream
join API_LATENCY_RAW_DATA as latencyRawData
    on apiInputStream.MESSAGE_ID == latencyRawData.MESSAGE_ID
select UUID() as id, STATUS_CODE as statusCode, RESPONSE_LATENCY as respTime, ELECTED_RESOURCE as electedResource,
       TIMESTAMP as timestamp, CUSTOMER_STATUS as customerStatus
insert into CDSMetricsRawStream;
